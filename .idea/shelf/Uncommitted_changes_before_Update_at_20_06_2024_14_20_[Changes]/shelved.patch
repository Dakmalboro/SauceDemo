Index: src/test/java/Saucedemo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.openqa.selenium.By;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\nimport org.openqa.selenium.edge.EdgeDriver;\r\nimport org.testng.annotations.Test;\r\n\r\nimport static org.testng.Assert.assertEquals;\r\nimport static org.testng.Assert.assertTrue;\r\n\r\npublic class Saucedemo {\r\n@Test\r\n    public void Test(){\r\n    System.setProperty(\"webdriver.chrome.driver\",\"src/test/resources/chromedriver.exe\");\r\n    WebDriver browser = new ChromeDriver();\r\n    browser.get(\"https://www.saucedemo.com/\");\r\n    browser.findElement(By.name(\"user-name\")).sendKeys(\"121212\");\r\n    browser.findElement(By.name(\"password\")).sendKeys(\"212\");\r\n    browser.findElement(By.cssSelector(\"[type=submit]\")).click();\r\n    String error = browser.findElement(By.cssSelector(\"[class=\\\"error-message-container error\\\"]\")).getText();\r\n    assertEquals(error,\"Epic sadface: Username and password do not match any user in this service\");\r\n    browser.quit();}\r\n@Test\r\n public void Test1 (){\r\n        System.setProperty(\"webdriver.chrome.driver\",\"src/test/resources/chromedriver.exe\");\r\n        WebDriver browser = new ChromeDriver();\r\n        browser.get(\"https://www.saucedemo.com/\");\r\n        browser.findElement(By.name(\"user-name\")).sendKeys(\"\");\r\n        browser.findElement(By.name(\"password\")).sendKeys(\"\");\r\n        browser.findElement(By.cssSelector(\"[type=submit]\")).click();\r\n        String error = browser.findElement(By.cssSelector(\"[class=\\\"error-message-container error\\\"]\")).getText();\r\n        assertEquals(error,\"Epic sadface: Username is required\");\r\n        browser.quit();\r\n\r\n}\r\n    @Test\r\n    public void Test2 () {\r\n        System.setProperty(\"webdriver.chrome.driver\", \"src/test/resources/chromedriver.exe\");\r\n        WebDriver browser = new ChromeDriver();\r\n        browser.get(\"https://www.saucedemo.com/\");\r\n        browser.findElement(By.name(\"user-name\")).sendKeys(\"standard_user\");\r\n        browser.findElement(By.name(\"password\")).sendKeys(\"secret_sauce\");\r\n        browser.findElement(By.cssSelector(\"[type=submit]\")).click();\r\n        boolean isPresent = browser.findElement(By.cssSelector(\"[class=title]\")).isDisplayed();\r\n        assertTrue(isPresent, \"The register is not displayed\");\r\n        browser.quit();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Saucedemo.java b/src/test/java/Saucedemo.java
--- a/src/test/java/Saucedemo.java	(revision 2124c01fa0b5a207c96ab88add35fde5bc3924ae)
+++ b/src/test/java/Saucedemo.java	(date 1718881848264)
@@ -45,4 +45,19 @@
         browser.quit();
 
     }
-}
+    @Test
+
+    public void Test3() {
+        System.setProperty("webdriver.chrome.driver", "src/test/resources/chromedriver.exe");
+        WebDriver browser = new ChromeDriver();
+        browser.get("https://www.saucedemo.com/");
+        browser.findElement(By.id("password"));
+        browser.findElement(By.name("password"));
+        browser.findElement(By.className("login_container"));
+
+
+        browser.quit();
+}}
+
+
+
Index: src/test/resources/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/.idea/vcs.xml b/src/test/resources/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1718881848271)
+++ b/src/test/resources/.idea/vcs.xml	(date 1718881848271)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/test/resources/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/.idea/modules.xml b/src/test/resources/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1718881848278)
+++ b/src/test/resources/.idea/modules.xml	(date 1718881848278)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/resources.iml" filepath="$PROJECT_DIR$/.idea/resources.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: src/test/resources/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/.idea/misc.xml b/src/test/resources/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1718881848285)
+++ b/src/test/resources/.idea/misc.xml	(date 1718881848285)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
